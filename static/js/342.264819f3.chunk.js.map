{"version":3,"file":"static/js/342.264819f3.chunk.js","mappings":"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","sources":["components/header/Header.tsx","utils/auxiliary.ts","components/forms/search/SearchForm.tsx","pages/posts.tsx"],"sourcesContent":["import { FC } from \"react\";\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n}\r\n\r\nconst headerStyle = {\r\n  backgroundColor: \"#f1f1f1\",\r\n  fontSize: \"18px\",\r\n  fontWeight: \"500\",\r\n};\r\n\r\nconst Header: FC<HeaderProps> = ({ title }) => {\r\n  return (\r\n    <div className=\"mb-5\" style={headerStyle}>\r\n      <div className=\"pt-3 pb-3 text-center\">{title}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const debounce = (func: Function, delay: number) => {\r\n  let timeoutId: NodeJS.Timeout;\r\n\r\n  return (...args: any[]) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func(...args), delay);\r\n  };\r\n};\r\n\r\nexport const objectToQueryString = (obj: { [key: string]: any }): string => {\r\n  const keys = Object.keys(obj);\r\n  const keyValuePairs = keys.map((key) => {\r\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]);\r\n  });\r\n  return keyValuePairs.join(\"&\");\r\n};\r\n\r\nexport const linkToParamObject = (link: string) => {\r\n  const params: URLSearchParams = new URLSearchParams(link);\r\n  const paramsObject: { [key: string]: string } = {};\r\n\r\n  params.forEach((value, key) => {\r\n    paramsObject[key] = value;\r\n  });\r\n\r\n  return paramsObject;\r\n};\r\n","import { useState, FC, ChangeEvent, FormEvent } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { debounce } from \"../../../utils/auxiliary\";\r\n\r\ninterface SearchFormProps {\r\n  onSearch: (query: string) => void;\r\n  initialValues: string;\r\n}\r\n\r\nconst SearchForm: FC<SearchFormProps> = ({ onSearch, initialValues }) => {\r\n  const [query, setQuery] = useState(initialValues);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = debounce((event: ChangeEvent<HTMLInputElement>) => {\r\n    navigate(`/posts?searchTerms=${event.target.value}`);\r\n    setQuery(event.target.value);\r\n  }, 400);\r\n\r\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n    // navigate(`/cms/example-mapper?${util.url.param({ ...values, page: 1 })}`);\r\n\r\n    event.preventDefault();\r\n    onSearch(query);\r\n  };\r\n\r\n  return (\r\n    <form className=\"row\" onSubmit={handleSubmit}>\r\n      <div className=\"col-lg-12\">\r\n        <label htmlFor=\"searchByNameInput\" className=\"form-label\">\r\n          Search posts by user\r\n        </label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          id=\"searchByNameInput\"\r\n          placeholder=\"Type a name\"\r\n          // value={query}\r\n          onChange={handleInputChange}\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import Header from \"../components/header/Header\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SearchForm from \"../components/forms/search/SearchForm\";\r\nimport { objectToQueryString, linkToParamObject } from \"../utils/auxiliary\";\r\n\r\nconst Posts: FC = () => {\r\n  const [postsData, setPostsData] = useState<any>(false);\r\n  const location = useLocation();\r\n\r\n  const paramObject = linkToParamObject(location.search);\r\n\r\n  console.log(\"paramObject\", paramObject);\r\n  console.log(objectToQueryString(paramObject));\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {};\r\n    console.log(\"postsData\", postsData);\r\n    console.log(\"paramObject\", paramObject);\r\n  }, [paramObject]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const posts = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/posts?${objectToQueryString(paramObject)}`\r\n        );\r\n\r\n        if (posts) {\r\n          const postIdString = posts.data\r\n            .map((post: any) => `postId=${post.id}`)\r\n            .join(\"&&\");\r\n\r\n          const comments = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/comments?${postIdString}`\r\n          );\r\n\r\n          const userIds: any = [];\r\n          posts.data.forEach((post: any) => {\r\n            if (!userIds.includes(post.userId)) {\r\n              userIds.push(post.userId);\r\n            }\r\n          });\r\n          const userIdString = userIds\r\n            .map((id: any) => `userId=${id}`)\r\n            .join(\"&&\");\r\n\r\n          const users = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/users?${userIdString}`\r\n          );\r\n\r\n          if (comments && users) {\r\n            const postsWithComments = posts.data.map((post: any) => {\r\n              const postComments = comments.data.filter(\r\n                (comment: any) => comment.postId === post.id\r\n              );\r\n\r\n              const postUser = users.data.find(\r\n                (user: any) => user.id === post.userId\r\n              );\r\n\r\n              return { ...post, comments: postComments, user: postUser };\r\n            });\r\n            setPostsData(postsWithComments);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"All posts\" />\r\n      <div className=\"container\">\r\n        <SearchForm\r\n          initialValues={\r\n            paramObject && paramObject.searchTerms\r\n              ? paramObject.searchTerms\r\n              : \"\"\r\n          }\r\n          onSearch={() => console.log(\"zz\")}\r\n        />\r\n        <div className=\"row items mt-4\">\r\n          {postsData &&\r\n            postsData.map((post: any) => {\r\n              return (\r\n                <div className=\"col-lg-4 item mb-4\" key={post.id}>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <p>\r\n                        <strong>User: </strong>\r\n                        <small>{post.user.name}</small>\r\n                      </p>\r\n                      <h5 className=\"card-title\">\r\n                        <Link\r\n                          to={`/post/${post.id}`}\r\n                          style={{\r\n                            textDecoration: \"none\",\r\n                            color: \"#343434\",\r\n                            minHeight: \"75px\",\r\n                            display: \"block\",\r\n                          }}\r\n                        >\r\n                          {post.title}\r\n                        </Link>\r\n                      </h5>\r\n                      <p\r\n                        className=\"card-text\"\r\n                        style={{\r\n                          minHeight: \"48px\",\r\n                        }}\r\n                      >\r\n                        {post.title}\r\n                      </p>\r\n                      <Link to={`/post/${post.id}`} className=\"card-link \">\r\n                        Read more\r\n                      </Link>\r\n                      {post.comments &&\r\n                        Array.isArray(post.comments) &&\r\n                        post.comments.length > 0 && (\r\n                          <>\r\n                            <p className=\"mt-3\">\r\n                              <small>\r\n                                <strong>Comments:</strong>\r\n                              </small>\r\n                            </p>\r\n                            <ul className=\"post-comments list-group list-group-flush\">\r\n                              {post.comments.map((comment: any) => (\r\n                                <li\r\n                                  className=\"list-group-item\"\r\n                                  key={comment.id}\r\n                                >\r\n                                  <p\r\n                                    className=\"text-sm\"\r\n                                    style={{ color: \"#ccc\" }}\r\n                                  >\r\n                                    <small>{comment.email}:</small>\r\n                                  </p>\r\n                                  <p className=\"text-sm\">\r\n                                    <small>{comment.name}</small>\r\n                                  </p>\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                          </>\r\n                        )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"names":["headerStyle","backgroundColor","fontSize","fontWeight","_ref","title","_jsx","className","style","children","objectToQueryString","obj","Object","keys","map","key","encodeURIComponent","join","onSearch","initialValues","query","setQuery","useState","navigate","useNavigate","handleInputChange","debounce","func","delay","timeoutId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","event","concat","target","value","onSubmit","preventDefault","_jsxs","htmlFor","type","id","placeholder","onChange","Posts","postsData","setPostsData","paramObject","link","params","URLSearchParams","paramsObject","forEach","linkToParamObject","useLocation","search","console","log","useEffect","async","posts","axios","get","postIdString","data","post","comments","userIds","includes","userId","push","userIdString","users","postsWithComments","postComments","filter","comment","postId","postUser","find","user","error","fetchData","_Fragment","Header","SearchForm","searchTerms","name","Link","to","textDecoration","color","minHeight","display","isArray","email"],"sourceRoot":""}